'name': 'Dogma'
'scopeName': 'source.dogma'
'comment': 'Dogma language'
'fileTypes': [
  'dog'
  'dogi'
]
'patterns': [
  {
    'begin': '#!'
    'end': '$'
    'name': 'constant.dogma'
  }
  {
    'begin': '#\\[!'
    'end': '\\]'
    'name': 'constant.dogma'
  }
  {
    'begin': '#\\['
    'end': '\\]'
    'name': 'comment.dogma'
  }
  {
    'begin': '#'
    'end': '$'
    'name': 'comment.dogma'
  }
  {
    'begin': '"""'
    'end': '"""'
    'name': 'string.quoted.triple.dogma'
  }
  {
    'begin': '"'
    'end': '"'
    'name': 'string.quoted.double.dogma'
    'patterns': [
      {
        'match': '\\\\.'
        'name': 'constant.character.escape.dogma'
      }
    ]
  }
  {
    'begin': '\''
    'end': '\''
    'name': 'entity.name.dogma'
  }
  {
    'match': '\\b(\\d[\\d\\. ]*)\\b'
    'name': 'constant.numeric.dogma'
  }
  {
    'match': '\\b(false|true|nil)\\b'
    'name': 'constant.language.dogma'
  }
  {
    'match': '\\b(and|as|async|break|catch|const|do|dogma|each|else|end|enum|export|extern|finally|fn|for|from|if|impl|in|int|is|like|native|next|nop|not|op|or|proc|pub|pvt|return|struct|then|type|use|var|while|with|yield)\\b'
    'name': 'keyword.dogma'
  }
  {
    'match': '\\b(abstract|await|bind|coalesce|date|echo|echof|emit|exec|execf|expect|fmt|json|keys|len|os|pawait|peval|print|printf|ps|pwait|range|remove|sleep|throw|todo|typename|values|year)\\b'
    'name': 'support.function.dogma'
  }
  {
    'match': '\\.\\.\\.[a-zA-Z0-9_]+'
    'name': 'variable.parameter.dogma'
  }
  {
    'match': '(([:!](?!(any|bool|datetime|func|list|num|map|promise|proxy|set|text))[a-zA-Z0-9_]+)|([\\.\\?][a-zA-Z0-9_]+))'
    'name': 'variable.language.dogma'
  }
  {
    'match': '(?<![^.][.:!])\\b(self|super)\\b'
    'name': 'variable.language.self.dogma'
  }
  {
    'match': '(\\$[a-zA-Z0-9_]+)'
    'name': 'variable.language.env'
  }
  {
    'match': '\\b(any|bool|datetime|func|list|num|map|promise|proxy|set|text)\\b'
    'name': 'support.type.dogma'
  }
  {
    'match': '(\\@[a-zA-Z0-9_]+)'
    'name': 'entity.name.section.dogma'
  }
  {
    'match': '\\+|\\+=|-|-=|\\*|\\*=|\\*\\*|\\*\\*=|\\/|\\/=|%|%=|=|==|===|=>|!=|!==|<|<<|<<=|<=|>|>>|>>=|>=|\\^|\\^=|~|~=|\\(|\\)|\\[|\\]|{|}|\\.\\.|\\.\\.\\.|\\?|&|&=|&&|\\||\\|=|\\|\\|\\,'
    'name': 'keyword.operator.dogma'
  }
]
